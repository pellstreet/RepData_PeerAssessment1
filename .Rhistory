#Reproducible data assignment: Course Project 1
setwd("C:/Users/epellichero/Desktop/Personal_docs/JH_certificate/5_Reproducible_research/Week_1/RepData_PeerAssessment1")
df<-read.csv("activity.csv",header=TRUE,colClasses=c("integer","Date","integer"))
# 1-What is mean total number of steps taken per day? ignore the NA data
#filter the NA data from the data frame
df.1<-na.omit(df)
#sum the steps taken per day
df.1_st<-aggregate(steps ~ date,df.1,sum)
#put the date in month-day format
df.1_st$date<-format(df.1_st$date, format="%m-%d")
#plot a histogram of the total steps per day
par(mar = c(5, 6, 4, 2), mgp = c(5, 1, 0))
barplot(df.1_st$steps,names=df.1_st$date,col="blue",
main="Total steps taken daily from 10/02/2012 to 11/29/2012",
ylab="Number of steps", ylim=c(0,22000),
cex.main=1.1, cex.names=0.8,cex.axis=0.9,
space=c(1.1,1),cex.lab=0.9,las=2)
#add grid and box
grid(col="black")
box()
#print the chart
dev.copy(png, file="n_steps_pr_day.png",width = 1000, height = 700)
dev.off()
#Calculate and report the mean and median of the total number of steps taken per day
summary(df.1_st$steps)
#2-What is the average daily activity pattern?
df.2_avg<-aggregate(steps ~ interval,df.1,mean)
plot(df.2_avg$interval,df.2_avg$steps,type="l")
df.2_avg$interval[max(df.2_avg$steps)]
df.2_avg
max(df.2_avg$steps)
df.2_avg$interval[max(df.2_avg$steps),]
df.2_avg_m<-subset(df.2_avg,max(df.2_avg$steps))
?subset
df.2_avg_m<-subset(df.2_avg,max(steps))
df.2_avg
df.2_avg[which.max(df.2_avg$steps),]
df.2_avg$interval[which.max(df.2_avg$steps),]
1df.2_avg[which.max(df.2_avg$steps),1]
df.2_avg[which.max(df.2_avg$steps),1]
df.2_avg<-aggregate(steps ~ interval,df.1,mean)
plot(df.2_avg$interval,df.2_avg$steps,type="l",col="blue",
main="Daily average steps per interval",
ylab="Average Number of steps", xlab="Interval",
cex.main=1.1, cex.names=0.8,cex.axis=0.9,
space=c(1.1,1),cex.lab=0.9,las=2)
df.2_avg<-aggregate(steps ~ interval,df.1,mean)
plot(df.2_avg$interval,df.2_avg$steps,type="l",col="blue",
main="Daily average steps per interval",
ylab="Average Number of steps", xlab="Interval",
cex.main=1.1, cex.names=0.8,cex.axis=0.9,
space=c(1.1,1),cex.lab=0.9,las=2)
grid()
df.2_avg<-aggregate(steps ~ interval,df.1,mean)
plot(df.2_avg$interval,df.2_avg$steps,type="l",col="blue",
main="Daily average steps per interval",
ylab="Average Number of steps", xlab="Interval",
cex.main=1.1, cex.names=0.8,cex.axis=0.9,
space=c(1.1,1),cex.lab=0.9)
grid()
#2-What is the average daily activity pattern?
df.2_avg<-aggregate(steps ~ interval,df.1,mean)
plot(df.2_avg$interval,df.2_avg$steps,type="l",col="blue",
main="Daily average steps per interval",
ylab="Average Number of steps", xlab="Interval",
cex.main=0.9, cex.names=0.8,cex.axis=0.9,cex.lab=0.9)
grid()
df.2_avg<-aggregate(steps ~ interval,df.1,mean)
plot(df.2_avg$interval,df.2_avg$steps,type="l",col="blue",
main="Daily average steps per interval",
ylab="Average Number of steps", xlab="Interval",
cex.main=0.9, cex.names=0.8,cex.axis=0.9,cex.lab=0.9)
grid()
dev.copy(png, file="average daily steps.png",width = 1000, height = 700)
dev.off()
par(mar = c(5, 4, 4, 2))
plot(df.2_avg$interval,df.2_avg$steps,type="l",col="blue",
main="Daily average steps per interval",
ylab="Average Number of steps", xlab="Interval",
cex.main=1.1, cex.names=0.8,cex.axis=0.9,cex.lab=1)
grid()
dev.copy(png, file="average daily steps.png",width = 1000, height = 700)
dev.off()
?par
par(mar = c(5, 4, 4, 2)+0.1)
plot(df.2_avg$interval,df.2_avg$steps,type="l",col="blue",
main="Daily average steps per interval",
ylab="Average Number of steps", xlab="Interval",
cex.main=1.1, cex.names=0.8,cex.axis=0.9,cex.lab=1)
grid()
dev.copy(png, file="average daily steps.png",width = 1000, height = 700)
dev.off()
plot(df.2_avg$interval,df.2_avg$steps,type="l",col="blue",
main="Daily average steps per interval",
ylab="Average Number of steps", xlab="Interval",
cex.main=1.1, cex.names=0.8,cex.axis=0.9,cex.lab=1)
grid()
dev.copy(png, file="average daily steps.png",width = 1000, height = 700)
dev.off()
par(mar = c(5, 6, 4, 2), mgp = c(5, 1, 0))
plot(df.2_avg$interval,df.2_avg$steps,type="l",col="blue",
main="Daily average steps per interval",
ylab="Average Number of steps", xlab="Interval",
cex.main=1.1, cex.names=0.8,cex.axis=0.9,cex.lab=1)
grid()
dev.copy(png, file="average daily steps.png",width = 1000, height = 700)
dev.off()
?par
par(mar = c(5, 6, 4, 2), mgp[2:3] = c(5, 1, 0))
par(mar = c(5, 6, 4, 2), mgp[2] = c(5, 1, 0))
df.2_avg<-aggregate(steps ~ interval,df.1,mean)
par(mar = c(5, 6, 4, 2), mgp = c(3, 1, 0))
plot(df.2_avg$interval,df.2_avg$steps,type="l",col="blue",
main="Daily average steps per interval",
ylab="Average Number of steps", xlab="Interval",
cex.main=1.1, cex.names=0.8,cex.axis=0.9,cex.lab=1)
grid()
dev.copy(png, file="average daily steps.png",width = 1000, height = 700)
dev.off()
par(mar = c(5, 6, 4, 2), mgp = c(3, 1, 0))
plot(df.2_avg$interval,df.2_avg$steps,type="l",col="blue",
main="Daily average steps per interval",
ylab="Average Number of steps", xlab="Interval",
cex.main=1.2, cex.names=0.9,cex.axis=1,cex.lab=1)
grid()
df
#Reproducible data assignment: Course Project 1
setwd("C:/Users/epellichero/Desktop/Personal_docs/JH_certificate/5_Reproducible_research/Week_1/RepData_PeerAssessment1")
df<-read.csv("activity.csv",header=TRUE,colClasses=c("integer","Date","integer"))
# 1-What is mean total number of steps taken per day? ignore the NA data
#filter the NA data from the data frame
df.1<-na.omit(df)
#sum the steps taken per day
df.1_st<-aggregate(steps ~ date,df.1,sum)
#put the date in month-day format
df.1_st$date<-format(df.1_st$date, format="%m-%d")
#plot a histogram of the total steps per day
par(mar = c(5, 6, 4, 2), mgp = c(5, 1, 0))
barplot(df.1_st$steps,names=df.1_st$date,col="blue",
main="Total steps taken daily from 10/02/2012 to 11/29/2012",
ylab="Number of steps", ylim=c(0,22000),
cex.main=1.1, cex.names=0.8,cex.axis=0.9,
space=c(1.1,1),cex.lab=0.9,las=2)
#add grid and box
grid(col="black")
box()
#print the chart
dev.copy(png, file="n_steps_pr_day.png",width = 1000, height = 700)
dev.off()
#Calculate and report the mean and median of the total number of steps taken per day
summary(df.1_st$steps)
#2-What is the average daily activity pattern?
df.2_avg<-aggregate(steps ~ interval,df.1,mean)
par(mar = c(5, 6, 4, 2), mgp = c(3, 1, 0))
plot(df.2_avg$interval,df.2_avg$steps,type="l",col="blue",
main="Daily average steps per interval",
ylab="Average Number of steps", xlab="Interval",
cex.main=1.2, cex.names=0.9,cex.axis=1,cex.lab=1)
grid()
dev.copy(png, file="average daily steps.png",width = 1000, height = 700)
dev.off()
#2 -Which 5-minute interval, on average across all the days in the dataset, contains the maximum number of steps?
df.2_avg[which.max(df.2_avg$steps),1]
#3- Imputing missing values
#3.1 - Calculate and report the t
head(df)
sum(is.na(df))
dim(df)
sum(is.na(df$steps))
is.na(df$steps)
?sub
df$steps[is.na(df$steps)]
df$steps[is.na(df$steps)]<-df.2_avg[df$interval,1]
df$steps
#Reproducible data assignment: Course Project 1
setwd("C:/Users/epellichero/Desktop/Personal_docs/JH_certificate/5_Reproducible_research/Week_1/RepData_PeerAssessment1")
df<-read.csv("activity.csv",header=TRUE,colClasses=c("integer","Date","integer"))
# 1-What is mean total number of steps taken per day? ignore the NA data
#filter the NA data from the data frame
df.1<-na.omit(df)
#sum the steps taken per day
df.1_st<-aggregate(steps ~ date,df.1,sum)
#put the date in month-day format
df.1_st$date<-format(df.1_st$date, format="%m-%d")
#plot a histogram of the total steps per day
par(mar = c(5, 6, 4, 2), mgp = c(5, 1, 0))
barplot(df.1_st$steps,names=df.1_st$date,col="blue",
main="Total steps taken daily from 10/02/2012 to 11/29/2012",
ylab="Number of steps", ylim=c(0,22000),
cex.main=1.1, cex.names=0.8,cex.axis=0.9,
space=c(1.1,1),cex.lab=0.9,las=2)
#add grid and box
grid(col="black")
box()
#print the chart
dev.copy(png, file="n_steps_pr_day.png",width = 1000, height = 700)
dev.off()
#Calculate and report the mean and median of the total number of steps taken per day
summary(df.1_st$steps)
#2-What is the average daily activity pattern?
df.2_avg<-aggregate(steps ~ interval,df.1,mean)
par(mar = c(5, 6, 4, 2), mgp = c(3, 1, 0))
plot(df.2_avg$interval,df.2_avg$steps,type="l",col="blue",
main="Daily average steps per interval",
ylab="Average Number of steps", xlab="Interval",
cex.main=1.2, cex.names=0.9,cex.axis=1,cex.lab=1)
grid()
dev.copy(png, file="average daily steps.png",width = 1000, height = 700)
dev.off()
#2 -Which 5-minute interval, on average across all the days in the dataset, contains the maximum number of steps?
df.2_avg[which.max(df.2_avg$steps),1]
#3- Imputing missing values
#3.1 - Calculate and report the total number of missing values in the dataset (i.e. the total number of rows with NA s)
sum(is.na(df))
sum(is.na(df$steps))
#3.2 Devise a strategy for filling in all of the missing values in the dataset.
#The strategy does not need to be sophisticated. For example, you could use the mean/median for
#that day, or the mean for that 5-minute interval, etc.
naloc<-is.na(df$steps)
df.2_avg
df
?merge
names(df)
df.2<-merge(df,df.2_avg,by="interval")
df.3<-merge(df,df.2_avg,by="interval")
df.3
head(df.3)
head(df)
head(df.2_avg)
df.3
head(df.3)
head(df.2_avg)
?order
?sort
df.3[order(df.3$date,df.3$interval)]
tail(df.3)
tail(df.2_avg)
head(df.2_avg)
head(df.3)
df.3[is.na(df$steps.x)]<-df.3$steps.y
class(df.3)
str(df.3)
head(df.3)
df.3[is.na(df$steps.x)]
is.na(df$steps.x)
df.3[is.na(df.3$steps.x)]<-df.3$steps.y
str(df.3)
df.3$steps.y
str(df.3)
df.med<-aggregate(steps ~ interval,df.1,median)
head(df.med)
df.med
df.3[is.na(df.3$steps.x)]
df.3<-merge(df,df.2_avg,by="interval")
str(df.3)
df.3$steps[is.na(df.3$steps.x)]<-df.3$steps.y[is.na(df.3$steps.x)]
df.3
head(df.3)
df.3<-merge(df,df.2_avg,by="interval")
df.3$steps.x[is.na(df.3$steps.x)]<-df.3$steps.y[is.na(df.3$steps.x)]
head(df.3)
count(is.na(df.3))
(is.na(df.3))
sum(is.na(df.3))
head(df.3)
rm(df.3$steps.y)
?rm
df.3$steps.y<-NULL
HEAD(DF.3)
head(df.3)
names(df.3)[2]<=steps_fill
names(df.3)[2]<-"steps_fill"
head(df.3)
#sum the steps taken per day
df.3<-aggregate(steps_fill ~ date,df.3,sum)
#put the date in month-day format
df.3$date<-format(df.3$date, format="%m-%d")
#plot a histogram of the total steps per day
par(mar = c(5, 6, 4, 2), mgp = c(5, 1, 0))
barplot(df.3$steps_fill,names=df.3$date,col="blue",
main="Total steps taken daily from 10/02/2012 to 11/29/2012",
ylab="Number of steps", ylim=c(0,22000),
cex.main=1.1, cex.names=0.8,cex.axis=0.9,
space=c(1.1,1),cex.lab=0.9,las=2)
#add grid and box
grid(col="black")
box()
#print the chart
dev.copy(png, file="n_steps_pr_day_FILLED.png",width = 1000, height = 700)
dev.off()
df
summary(df.3$steps_fill)
summary(df.1_st$steps)
summary(df.1_st$steps,na.rm=TRUE)
summary(df.1$steps,na.rm=TRUE)
summary(df.1_st$steps,na.rm=TRUE)
head(df.1_st)
mean(df.1_st$steps,na.rm=TRUE)
median(df.1_st$steps,na.rm=TRUE)
mean(df.3$steps_fill)
median(df.3$step_fill)
median(df.3$steps_fill)
?weekdays
df.3$WKD<-weekdays(date)
df.3$WKD<-weekdays(df.3$date)
str(df.3)
df.3$date<-as.date(df.3$date)
?as.Date
df.3$date<-as.Date(df.3$date)
df
df.2
df.3
df.3<-merge(df,df.2_avg,by="interval")
df.3
df.3$steps.x[is.na(df.3$steps.x)]<-df.3$steps.y[is.na(df.3$steps.x)]
df.3$steps.y<-NULL
df.3
head(df.3)
names(df.3)[2]<-"steps_fill"
str(df.3)
df.3$wkd<-weekdays(df.3$date)
str(df.3)
head(df.3)
df.3$wkd<-gsub("Monday","Weekday",df.3$wkd)
head(df.3$wkd)
df.3$wkd<-gsub("Monday" & "Tuesday","Weekday",df.3$wkd)
df.3$wkd<-gsub("Monday" | "Tuesday","Weekday",df.3$wkd)
df.3$wkd<-gsub(c("Monday","Tuesday","Weekday",df.3$wkd)
)
df.3$wkd<-gsub(c("Monday","Tuesday"),"Weekday",df.3$wkd)
?gsub
df.3$wkd<-weekdays(df.3$date)
df.3$wkd<-gsub(c("Monday","Tuesday","Wednesday","thursday","Friday","saturday","Sunday"),c("Weekday","Weekday","Weekday","Weekday","Weekday","Weekend","Weekend"),df.3$wkd)
df.3$wkd<-gsub(c("Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"),c("Weekday","Weekday","Weekday","Weekday","Weekday","Weekend","Weekend"),df.3$wkd)
df.3
head(df.3)
df.3$wkd<-mapply(gsub(c("Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"),c("Weekday","Weekday","Weekday","Weekday","Weekday","Weekend","Weekend"),df.3$wkd))
df.3$wkd<-mapply(gsub,c("Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"),c("Weekday","Weekday","Weekday","Weekday","Weekday","Weekend","Weekend"),df.3$wkd)))
df.3$wkd<-mapply(gsub,c("Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"),c("Weekday","Weekday","Weekday","Weekday","Weekday","Weekend","Weekend"),df.3$wkd))
df.3$wkd<-mapply(gsub,c("Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"),c("Weekday","Weekday","Weekday","Weekday","Weekday","Weekend","Weekend"),df.3$wkd)
head(df.3)
df.3$wkd<-weekdays(df.3$date)
a<-c("Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday")
b<-c("Weekday","Weekday","Weekday","Weekday","Weekday","Weekend","Weekend")
df.3$wkd<-mapply(gsub,a,b,df.3$wkd)
?mapply
for (i in 1:length(a)){
df.3$wkd<-mapply(gsub,a[i],b[i],df.3$wkd)}
head(df.3)
df.4<-aggregate(steps_fill ~ wkddf.3,mean)
df.4<-aggregate(steps_fill ~ wkd,df.3,mean)
df.4
head(df.3)
df.4<-aggregate(steps_fill ~ wkd+interval,df.3,mean)
df.4
g <- ggplot(df.4, aes(x=interval, y=fill, color = wkd)) +
geom_line() +
facet_wrap(.~wkd, ncol = 1, nrow=2)
print(g)
library(ggplot2)
g <- ggplot(df.4, aes(x=interval, y=fill, color = wkd)) +
geom_line() +
facet_wrap(.~wkd, ncol = 1, nrow=2)
print(g)
df.4
str(df.4)
df.4$wkd<-as.factor(df.4$wkd)
g <- ggplot(df.4, aes(x=interval, y=fill, color = wkd)) +
geom_line() +
facet_wrap(.~wkd, ncol = 1, nrow=2)
print(g)
g <- ggplot(df.4, aes(x=interval, y=fill, color = wkd)) +
geom_line() +
facet_wrap(. ~ wkd, ncol = 1, nrow=2)
print(g)
g <- ggplot(df.4, aes(x=interval, y=fill, color = wkd)) +
geom_line() +
facet_wrap(~ wkd, ncol = 1, nrow=2)
print(g)
g <- ggplot(df.4, aes(x=interval, y=fill, color = wkd))
+
geom_line() +
)
geom_line()
+geom_line()
g <- ggplot(df.4, aes(x=interval, y=fill, color = wkd)) +
geom_line() +
facet_wrap(. ~ wkd, ncol = 1, nrow=2)
print(g)
g
g <- ggplot(df.4, aes(x=interval, y=fill, color = wkd)) +
geom_line() +
facet_grid(. ~ wkd, ncol = 1, nrow=2)
print(g)
df.4$wkd<-as.factor(df.4$wkd)
g <- ggplot(df.4, aes(x=interval, y=fill, color = wkd)) +
geom_line() +
facet_grid(. ~ df.4$wkd, ncol = 1, nrow=2)+
labs(x="year")+
labs(y="PM2.5 emission (tons)")
df.4$wkd
g <- ggplot(df.4, aes(x=interval, y=fill, color = wkd)) +
geom_line() +
facet_grid(. ~ wkd, ncol = 1, nrow=2)+
labs(x="year")+
labs(y="PM2.5 emission (tons)")
g <- ggplot(df.4, aes(x=interval, y=fill, color = wkd)) +
geom_line() +
facet_grid(. ~ wkd)+
labs(x="year")+
labs(y="PM2.5 emission (tons)")
print(g)
names(df.4)
g <- ggplot(df.4, aes(x=interval, y=steps_fill, color = wkd)) +
geom_line() +
facet_grid(. ~ wkd)+
labs(x="year")+
labs(y="PM2.5 emission (tons)")
print(g)
g <- ggplot(df.4, aes(x=interval, y=steps_fill, color = wkd)) +
geom_line() +
facet_wrap(. ~ wkd,ncol=1,nrow=2)+
labs(x="year")+
labs(y="PM2.5 emission (tons)")
print(g)
g <- ggplot(df.4, aes(x=interval, y=steps_fill, color = wkd)) +
geom_line() +
facet_wrap(. ~ wkd)+
labs(x="year")+
labs(y="PM2.5 emission (tons)")
print(g)
g <- ggplot(df.4, aes(x=interval, y=steps_fill, color = wkd)) +
geom_line() +
facet_grid(. ~ wkd)+
labs(x="year")+
labs(y="PM2.5 emission (tons)")
print(g)
?facet.grid
?facet
g <- ggplot(df.4, aes(x=interval, y=steps_fill, color = wkd)) +
geom_line() +
facet_grid(. ~ wkd)+
labs(x="year")+
labs(y="PM2.5 emission (tons)")
print(g)
g <- ggplot(df.4, aes(x=interval, y=steps_fill, color = wkd)) +
geom_line() +
facet_grid(. ~ wkd,nrow=2,ncol=1)+
labs(x="year")+
labs(y="PM2.5 emission (tons)")
print(g)
g <- ggplot(df.4, aes(x=interval, y=steps_fill, color = wkd)) +
geom_line() +
facet_grid(. ~ wkd)+
labs(x="year")+
labs(y="PM2.5 emission (tons)")
print(g)
g <- ggplot(df.4, aes(x=interval, y=steps_fill, color = wkd)) +
geom_line() +
facet_grid(. ~ wkd)+
labs(x="interval")+
labs(y="steps")
print(g)
g <- ggplot(df.4, aes(x=interval, y=steps_fill, color = wkd)) +
geom_line() +
facet_wrap(. ~ wkd, ncol=2)+
labs(x="interval")+
labs(y="steps")
print(g)
g <- ggplot(df.4, aes(x=interval, y=steps_fill, color = wkd)) +
geom_line() +
facet_wrap(. ~ wkd)+
labs(x="interval")+
labs(y="steps")
print(g)
str(df.4)
g <- ggplot(df.4, aes(x=interval, y=steps_fill, color = wkd)) +
geom_line() +
facet_wrap(~ wkd)+
labs(x="interval")+
labs(y="steps")
print(g)
g <- ggplot(df.4, aes(x=interval, y=steps_fill, color = wkd)) +
geom_line() +
facet_wrap(~ wkd,ncol=2)+
labs(x="interval")+
labs(y="steps")
print(g)
df.4$wkd<-as.factor(df.4$wkd)
g <- ggplot(df.4, aes(x=interval, y=steps_fill, color = wkd)) +
geom_line() +
facet_wrap(~ wkd,nrow=1,ncol=2)+
labs(x="interval")+
labs(y="steps")
print(g)
df.4$wkd<-as.factor(df.4$wkd)
g <- ggplot(df.4, aes(x=interval, y=steps_fill, color = wkd)) +
geom_line() +
facet_wrap(~ wkd,nrow=2,ncol=1)+
labs(x="interval")+
labs(y="steps")
print(g)
